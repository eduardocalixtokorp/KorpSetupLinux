---
- name: "Validação de variáveis de {{ service_name }}"
  ansible.builtin.fail:
    msg: "Um ou mais valores não foram setados nas variáveis de {{ service_name }}"
  when: services[service_name].db is defined and (services[service_name].db.type is undefined or services[service_name].db.type == None)

- name: "Validação de \"oauth_client\" de {{ service_name }}"
  ansible.builtin.set_fact:
    services: "{{ services | combine(
      {
        service_name : {
          'oauth_client': {
            'skip': false
          }
        }
      },
      recursive=True) }}"
  when:
    - services[service_name].oauth_client is undefined or services[service_name].oauth_client.skip is undefined

- name: "Validação de \"db.name\" de {{ service_name }}"
  ansible.builtin.set_fact:
    services: "{{ services | combine(
      {
        service_name : {
          'db': {
            'name':  service_name | replace('.','_')
          }
        }
      },
      recursive=True) }}"
  when:
    - services[service_name].db is defined and (services[service_name].db.name is undefined or services[service_name].db.name == None)

- name: "Definição de service_vars para {{ service_name }}"
  ansible.builtin.set_fact:
    service_vars: "{{ services[service_name] }}"

- name: "Print variavel service_vars"
  ansible.builtin.debug:
    msg: "{{service_vars}}"

- name: "Print variavel db_sufix"
  ansible.builtin.debug:
    msg: "{{db_sufix}}"

- name: "Definição de service_vars com sufixo para {{ service_name }}"
  ansible.builtin.set_fact:
    service_vars: "{{ services_vars | combine(
      {  
          'db': {
            'name': db_sufix
          }
      },
      recursive=True) }}"
  when: db_sufix is defined and db_sufix != None

- name: "Print variavel service_vars dbName"
  ansible.builtin.debug:
    msg: "{{service_vars.db.name}}"
